[build-system]
requires = [
  "setuptools >= 61.0",
  "setuptools_scm[toml] >= 8",
]
build-backend = "setuptools.build_meta"

[project]
name = "NREL-farms"
dynamic = ["version"]
description = "The Fast All-sky Radiation Model for Solar applications (FARMS)"
keywords = ["farms", "NREL"]
readme = "README.rst"
authors = [
  {name = "Brandon Benton", email = "brandon.benton@nrel.gov"},
  {name = "Grant Buster", email = "grant.buster@nrel.gov"}
]
license = {text = "BSD-3-Clause"}
requires-python = ">= 3.9"
classifiers=[
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: BSD License",
  "Natural Language :: English",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "numpy>=1.17",
  "pandas>=0.25"
]

[project.optional-dependencies]
dev = [
  "build>=0.5",
  "pre-commit",
  "ruff>=0.5.0"
]
doc = [
  "sphinx>=7.0",
  "sphinx_rtd_theme>=2.0",
  "sphinx-click>=4.0",
]
test = [
  "pytest>=5.2",
]

[project.urls]
homepage = "https://github.com/NREL/farms"
documentation = "https://nrel.github.io/farms/"
repository = "https://github.com/NREL/farms"

[tool.ruff]
line-length = 79
indent-width = 4

target-version = "py39"

[tool.ruff.lint]
fixable = []
# preview = true
# logger-objects = []
task-tags = ["TODO", "FIXME", "XXX"]
select = [
  "A", # flake8-builtins
  "ARG", # flake8-unused-arguments
  "C",
  "C4", # flake8-comprehensions
  "C90", # mccabe
  "COM", # flake8-commas
  "D", # pydocstyle
  "E", # pycodestyle
  "F", # Pyflakes
  "G", # flake8-logging-format
  "I", # isort
  "LOG", # flake8-logging
  "N", # pep8-naming
  "NPY", # numpy-specific
  "PERF", # Perflint
  "PL", # Pylint
  "Q", # flake8-quotes
  "SIM", # flake8-simplify
  "UP", # pyupgrade
  "W", # Warning
]

ignore = [
  # Currently don't conform but we might want to reconsider
  "A001", # builtin-variable-shadowing
  "A002", # builtin-argument-shadowing
  # Currently don't conform but we might want to reconsider
  "ARG005", # unused-lambda-argument
  "C408", # unnecessary-collection-call
  "C414", # unnecessary-double-cast-or-process
  "COM812", # missing-trailing-comma
  "D105", # undocumented-magic-method
  "D200", # fits-on-one-line
  "D202", # no-blank-line-after-function
  "D204", # one-blank-line-after-class
  "D205", # blank-line-after-summary
  "D207", # under-indentation
  "D209", # new-line-after-last-paragraph
  "D400", # ends-in-period
  "D401", # non-imperative-mood
  "D404", # docstring-starts-with-this
  "E402", # import not at top of file
  "FIX001",	# line-contains-fixme
  "G004", # f-string logging
  "G001", # str.format logging
  "N802", # invalid-function-name
  "N803", # invalid-argument-name
  "N806", # non-lowercase-variable-in-function
  "N811", # constant imported as non constant
  "N817", # imported as acronym
  "PERF102", # incorrect-dict-iterator
  "PERF203", # try-except-in-loop
  "PERF401", # manual-list-comprehension
  "PLC0415", # import not at top of file
  "PLR0904", # too-many-public-methods
  "PLR0912", # too-many-branches
  "PLR0913", # too-many-arguments
  "PLR0914", # too-many-locals
  "PLR0915", # too-many-statements
  "PLR1702", # too-many-nested-blocks
  "PLR1704", # redefined-argument-from-local
  "PLR2004", # magic-value-comparison
  "PLW1514", # unspecified-encoding
  "PLW2901", # redefined-loop-name
  "Q000", # bad-quotes-inline-string
  "Q004", # unnecessary-escaped-quote
  "SIM108", # if-else-block-instead-of-if-exp
  "SIM117", #multiple-with-statements
  "SIM118", # in-dict-keys
  "SIM211", # if-expr-with-false-true
  "UP009", # utf8-encoding-declaration
  "UP015", # redundant-open-modes
  "UP032", # f-string
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # unused imports

[tool.ruff.lint.pylint]
max-args = 5 # (PLR0913) Maximum number of arguments for function / method
max-bool-expr = 5 # ( PLR0916) Boolean in a single if statement
max-branches=12 # (PLR0912) branches allowed for a function or method body
max-locals=15 # (PLR0912) local variables allowed for a function or method body
max-nested-blocks = 5 # (PLR1702) nested blocks within a function or method body
max-public-methods=20 # (R0904) public methods allowed for a class
max-returns=6 # (PLR0911) return statements for a function or method body
max-statements=50 # (PLR0915) statements allowed for a function or method body

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
# Consider adopting "lf" instead
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.setuptools]
include-package-data = true
packages = ["farms"]

[tool.setuptools_scm]
version_file = "farms/_version.py"
